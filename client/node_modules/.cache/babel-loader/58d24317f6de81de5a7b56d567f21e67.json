{"ast":null,"code":"var _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport classnames from 'classnames'; //\n\nimport _ from './utils';\nimport Lifecycle from './lifecycle';\nimport Methods from './methods';\nimport defaultProps from './defaultProps';\nimport propTypes from './propTypes';\nexport var ReactTableDefaults = defaultProps;\n\nvar ReactTable = function (_Methods) {\n  _inherits(ReactTable, _Methods);\n\n  function ReactTable(props) {\n    _classCallCheck(this, ReactTable);\n\n    var _this = _possibleConstructorReturn(this, (ReactTable.__proto__ || Object.getPrototypeOf(ReactTable)).call(this, props));\n\n    _this.getResolvedState = _this.getResolvedState.bind(_this);\n    _this.getDataModel = _this.getDataModel.bind(_this);\n    _this.getSortedData = _this.getSortedData.bind(_this);\n    _this.fireFetchData = _this.fireFetchData.bind(_this);\n    _this.getPropOrState = _this.getPropOrState.bind(_this);\n    _this.getStateOrProp = _this.getStateOrProp.bind(_this);\n    _this.filterData = _this.filterData.bind(_this);\n    _this.sortData = _this.sortData.bind(_this);\n    _this.getMinRows = _this.getMinRows.bind(_this);\n    _this.onPageChange = _this.onPageChange.bind(_this);\n    _this.onPageSizeChange = _this.onPageSizeChange.bind(_this);\n    _this.sortColumn = _this.sortColumn.bind(_this);\n    _this.filterColumn = _this.filterColumn.bind(_this);\n    _this.resizeColumnStart = _this.resizeColumnStart.bind(_this);\n    _this.resizeColumnEnd = _this.resizeColumnEnd.bind(_this);\n    _this.resizeColumnMoving = _this.resizeColumnMoving.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactTable, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var resolvedState = this.getResolvedState();\n      var children = resolvedState.children,\n          className = resolvedState.className,\n          style = resolvedState.style,\n          getProps = resolvedState.getProps,\n          getTableProps = resolvedState.getTableProps,\n          getTheadGroupProps = resolvedState.getTheadGroupProps,\n          getTheadGroupTrProps = resolvedState.getTheadGroupTrProps,\n          getTheadGroupThProps = resolvedState.getTheadGroupThProps,\n          getTheadProps = resolvedState.getTheadProps,\n          getTheadTrProps = resolvedState.getTheadTrProps,\n          getTheadThProps = resolvedState.getTheadThProps,\n          getTheadFilterProps = resolvedState.getTheadFilterProps,\n          getTheadFilterTrProps = resolvedState.getTheadFilterTrProps,\n          getTheadFilterThProps = resolvedState.getTheadFilterThProps,\n          getTbodyProps = resolvedState.getTbodyProps,\n          getTrGroupProps = resolvedState.getTrGroupProps,\n          getTrProps = resolvedState.getTrProps,\n          getTdProps = resolvedState.getTdProps,\n          getTfootProps = resolvedState.getTfootProps,\n          getTfootTrProps = resolvedState.getTfootTrProps,\n          getTfootTdProps = resolvedState.getTfootTdProps,\n          getPaginationProps = resolvedState.getPaginationProps,\n          getLoadingProps = resolvedState.getLoadingProps,\n          getNoDataProps = resolvedState.getNoDataProps,\n          getResizerProps = resolvedState.getResizerProps,\n          showPagination = resolvedState.showPagination,\n          showPaginationTop = resolvedState.showPaginationTop,\n          showPaginationBottom = resolvedState.showPaginationBottom,\n          manual = resolvedState.manual,\n          loadingText = resolvedState.loadingText,\n          noDataText = resolvedState.noDataText,\n          sortable = resolvedState.sortable,\n          multiSort = resolvedState.multiSort,\n          resizable = resolvedState.resizable,\n          filterable = resolvedState.filterable,\n          pivotIDKey = resolvedState.pivotIDKey,\n          pivotValKey = resolvedState.pivotValKey,\n          pivotBy = resolvedState.pivotBy,\n          subRowsKey = resolvedState.subRowsKey,\n          aggregatedKey = resolvedState.aggregatedKey,\n          originalKey = resolvedState.originalKey,\n          indexKey = resolvedState.indexKey,\n          groupedByPivotKey = resolvedState.groupedByPivotKey,\n          loading = resolvedState.loading,\n          pageSize = resolvedState.pageSize,\n          page = resolvedState.page,\n          sorted = resolvedState.sorted,\n          filtered = resolvedState.filtered,\n          resized = resolvedState.resized,\n          expanded = resolvedState.expanded,\n          pages = resolvedState.pages,\n          onExpandedChange = resolvedState.onExpandedChange,\n          TableComponent = resolvedState.TableComponent,\n          TheadComponent = resolvedState.TheadComponent,\n          TbodyComponent = resolvedState.TbodyComponent,\n          TrGroupComponent = resolvedState.TrGroupComponent,\n          TrComponent = resolvedState.TrComponent,\n          ThComponent = resolvedState.ThComponent,\n          TdComponent = resolvedState.TdComponent,\n          TfootComponent = resolvedState.TfootComponent,\n          PaginationComponent = resolvedState.PaginationComponent,\n          LoadingComponent = resolvedState.LoadingComponent,\n          SubComponent = resolvedState.SubComponent,\n          NoDataComponent = resolvedState.NoDataComponent,\n          ResizerComponent = resolvedState.ResizerComponent,\n          ExpanderComponent = resolvedState.ExpanderComponent,\n          PivotValueComponent = resolvedState.PivotValueComponent,\n          PivotComponent = resolvedState.PivotComponent,\n          AggregatedComponent = resolvedState.AggregatedComponent,\n          FilterComponent = resolvedState.FilterComponent,\n          PadRowComponent = resolvedState.PadRowComponent,\n          resolvedData = resolvedState.resolvedData,\n          allVisibleColumns = resolvedState.allVisibleColumns,\n          headerGroups = resolvedState.headerGroups,\n          hasHeaderGroups = resolvedState.hasHeaderGroups,\n          sortedData = resolvedState.sortedData,\n          currentlyResizing = resolvedState.currentlyResizing; // Pagination\n\n      var startRow = pageSize * page;\n      var endRow = startRow + pageSize;\n      var pageRows = manual ? resolvedData : sortedData.slice(startRow, endRow);\n      var minRows = this.getMinRows();\n\n      var padRows = _.range(Math.max(minRows - pageRows.length, 0));\n\n      var hasColumnFooter = allVisibleColumns.some(function (d) {\n        return d.Footer;\n      });\n      var hasFilters = filterable || allVisibleColumns.some(function (d) {\n        return d.filterable;\n      });\n\n      var recurseRowsViewIndex = function recurseRowsViewIndex(rows) {\n        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n        return [rows.map(function (row, i) {\n          index += 1;\n\n          var rowWithViewIndex = _extends({}, row, {\n            _viewIndex: index\n          });\n\n          var newPath = path.concat([i]);\n\n          if (rowWithViewIndex[subRowsKey] && _.get(expanded, newPath)) {\n            var _recurseRowsViewIndex = recurseRowsViewIndex(rowWithViewIndex[subRowsKey], newPath, index);\n\n            var _recurseRowsViewIndex2 = _slicedToArray(_recurseRowsViewIndex, 2);\n\n            rowWithViewIndex[subRowsKey] = _recurseRowsViewIndex2[0];\n            index = _recurseRowsViewIndex2[1];\n          }\n\n          return rowWithViewIndex;\n        }), index];\n      };\n\n      var _recurseRowsViewIndex3 = recurseRowsViewIndex(pageRows);\n\n      var _recurseRowsViewIndex4 = _slicedToArray(_recurseRowsViewIndex3, 1);\n\n      pageRows = _recurseRowsViewIndex4[0];\n      var canPrevious = page > 0;\n      var canNext = page + 1 < pages;\n\n      var rowMinWidth = _.sum(allVisibleColumns.map(function (d) {\n        var resizedColumn = resized.find(function (x) {\n          return x.id === d.id;\n        }) || {};\n        return _.getFirstDefined(resizedColumn.value, d.width, d.minWidth);\n      }));\n\n      var rowIndex = -1;\n\n      var finalState = _extends({}, resolvedState, {\n        startRow: startRow,\n        endRow: endRow,\n        pageRows: pageRows,\n        minRows: minRows,\n        padRows: padRows,\n        hasColumnFooter: hasColumnFooter,\n        canPrevious: canPrevious,\n        canNext: canNext,\n        rowMinWidth: rowMinWidth\n      });\n\n      var rootProps = _.splitProps(getProps(finalState, undefined, undefined, this));\n\n      var tableProps = _.splitProps(getTableProps(finalState, undefined, undefined, this));\n\n      var tBodyProps = _.splitProps(getTbodyProps(finalState, undefined, undefined, this));\n\n      var loadingProps = getLoadingProps(finalState, undefined, undefined, this);\n      var noDataProps = getNoDataProps(finalState, undefined, undefined, this); // Visual Components\n\n      var makeHeaderGroup = function makeHeaderGroup(column, i) {\n        var resizedValue = function resizedValue(col) {\n          return (resized.find(function (x) {\n            return x.id === col.id;\n          }) || {}).value;\n        };\n\n        var flex = _.sum(column.columns.map(function (col) {\n          return col.width || resizedValue(col) ? 0 : col.minWidth;\n        }));\n\n        var width = _.sum(column.columns.map(function (col) {\n          return _.getFirstDefined(resizedValue(col), col.width, col.minWidth);\n        }));\n\n        var maxWidth = _.sum(column.columns.map(function (col) {\n          return _.getFirstDefined(resizedValue(col), col.width, col.maxWidth);\n        }));\n\n        var theadGroupThProps = _.splitProps(getTheadGroupThProps(finalState, undefined, column, _this2));\n\n        var columnHeaderProps = _.splitProps(column.getHeaderProps(finalState, undefined, column, _this2));\n\n        var classes = [column.headerClassName, theadGroupThProps.className, columnHeaderProps.className];\n\n        var styles = _extends({}, column.headerStyle, theadGroupThProps.style, columnHeaderProps.style);\n\n        var rest = _extends({}, theadGroupThProps.rest, columnHeaderProps.rest);\n\n        var flexStyles = {\n          flex: flex + ' 0 auto',\n          width: _.asPx(width),\n          maxWidth: _.asPx(maxWidth)\n        };\n        return React.createElement(ThComponent, _extends({\n          key: i + '-' + column.id,\n          className: classnames(classes),\n          style: _extends({}, styles, flexStyles)\n        }, rest), _.normalizeComponent(column.Header, {\n          data: sortedData,\n          column: column\n        }));\n      };\n\n      var makeHeaderGroups = function makeHeaderGroups() {\n        var theadGroupProps = _.splitProps(getTheadGroupProps(finalState, undefined, undefined, _this2));\n\n        var theadGroupTrProps = _.splitProps(getTheadGroupTrProps(finalState, undefined, undefined, _this2));\n\n        return React.createElement(TheadComponent, _extends({\n          className: classnames('-headerGroups', theadGroupProps.className),\n          style: _extends({}, theadGroupProps.style, {\n            minWidth: rowMinWidth + 'px'\n          })\n        }, theadGroupProps.rest), React.createElement(TrComponent, _extends({\n          className: theadGroupTrProps.className,\n          style: theadGroupTrProps.style\n        }, theadGroupTrProps.rest), headerGroups.map(makeHeaderGroup)));\n      };\n\n      var makeHeader = function makeHeader(column, i) {\n        var resizedCol = resized.find(function (x) {\n          return x.id === column.id;\n        }) || {};\n        var sort = sorted.find(function (d) {\n          return d.id === column.id;\n        });\n        var show = typeof column.show === 'function' ? column.show() : column.show;\n\n        var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n        var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n        var theadThProps = _.splitProps(getTheadThProps(finalState, undefined, column, _this2));\n\n        var columnHeaderProps = _.splitProps(column.getHeaderProps(finalState, undefined, column, _this2));\n\n        var classes = [column.headerClassName, theadThProps.className, columnHeaderProps.className];\n\n        var styles = _extends({}, column.headerStyle, theadThProps.style, columnHeaderProps.style);\n\n        var rest = _extends({}, theadThProps.rest, columnHeaderProps.rest);\n\n        var isResizable = _.getFirstDefined(column.resizable, resizable, false);\n\n        var resizer = isResizable ? React.createElement(ResizerComponent, _extends({\n          onMouseDown: function onMouseDown(e) {\n            return _this2.resizeColumnStart(e, column, false);\n          },\n          onTouchStart: function onTouchStart(e) {\n            return _this2.resizeColumnStart(e, column, true);\n          }\n        }, getResizerProps('finalState', undefined, column, _this2))) : null;\n\n        var isSortable = _.getFirstDefined(column.sortable, sortable, false);\n\n        return React.createElement(ThComponent, _extends({\n          key: i + '-' + column.id,\n          className: classnames(classes, isResizable && 'rt-resizable-header', sort ? sort.desc ? '-sort-desc' : '-sort-asc' : '', isSortable && '-cursor-pointer', !show && '-hidden', pivotBy && pivotBy.slice(0, -1).includes(column.id) && 'rt-header-pivot'),\n          style: _extends({}, styles, {\n            flex: width + ' 0 auto',\n            width: _.asPx(width),\n            maxWidth: _.asPx(maxWidth)\n          }),\n          toggleSort: function toggleSort(e) {\n            if (isSortable) _this2.sortColumn(column, multiSort ? e.shiftKey : false);\n          }\n        }, rest), React.createElement('div', {\n          className: classnames(isResizable && 'rt-resizable-header-content')\n        }, _.normalizeComponent(column.Header, {\n          data: sortedData,\n          column: column\n        })), resizer);\n      };\n\n      var makeHeaders = function makeHeaders() {\n        var theadProps = _.splitProps(getTheadProps(finalState, undefined, undefined, _this2));\n\n        var theadTrProps = _.splitProps(getTheadTrProps(finalState, undefined, undefined, _this2));\n\n        return React.createElement(TheadComponent, _extends({\n          className: classnames('-header', theadProps.className),\n          style: _extends({}, theadProps.style, {\n            minWidth: rowMinWidth + 'px'\n          })\n        }, theadProps.rest), React.createElement(TrComponent, _extends({\n          className: theadTrProps.className,\n          style: theadTrProps.style\n        }, theadTrProps.rest), allVisibleColumns.map(makeHeader)));\n      };\n\n      var makeFilter = function makeFilter(column, i) {\n        var resizedCol = resized.find(function (x) {\n          return x.id === column.id;\n        }) || {};\n\n        var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n        var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n        var theadFilterThProps = _.splitProps(getTheadFilterThProps(finalState, undefined, column, _this2));\n\n        var columnHeaderProps = _.splitProps(column.getHeaderProps(finalState, undefined, column, _this2));\n\n        var classes = [column.headerClassName, theadFilterThProps.className, columnHeaderProps.className];\n\n        var styles = _extends({}, column.headerStyle, theadFilterThProps.style, columnHeaderProps.style);\n\n        var rest = _extends({}, theadFilterThProps.rest, columnHeaderProps.rest);\n\n        var filter = filtered.find(function (filter) {\n          return filter.id === column.id;\n        });\n        var ResolvedFilterComponent = column.Filter || FilterComponent;\n\n        var isFilterable = _.getFirstDefined(column.filterable, filterable, false);\n\n        return React.createElement(ThComponent, _extends({\n          key: i + '-' + column.id,\n          className: classnames(classes),\n          style: _extends({}, styles, {\n            flex: width + ' 0 auto',\n            width: _.asPx(width),\n            maxWidth: _.asPx(maxWidth)\n          })\n        }, rest), isFilterable ? _.normalizeComponent(ResolvedFilterComponent, {\n          column: column,\n          filter: filter,\n          onChange: function onChange(value) {\n            return _this2.filterColumn(column, value);\n          }\n        }, defaultProps.column.Filter) : null);\n      };\n\n      var makeFilters = function makeFilters() {\n        var theadFilterProps = _.splitProps(getTheadFilterProps(finalState, undefined, undefined, _this2));\n\n        var theadFilterTrProps = _.splitProps(getTheadFilterTrProps(finalState, undefined, undefined, _this2));\n\n        return React.createElement(TheadComponent, _extends({\n          className: classnames('-filters', theadFilterProps.className),\n          style: _extends({}, theadFilterProps.style, {\n            minWidth: rowMinWidth + 'px'\n          })\n        }, theadFilterProps.rest), React.createElement(TrComponent, _extends({\n          className: theadFilterTrProps.className,\n          style: theadFilterTrProps.style\n        }, theadFilterTrProps.rest), allVisibleColumns.map(makeFilter)));\n      };\n\n      var makePageRow = function makePageRow(row, i) {\n        var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n        var rowInfo = {\n          original: row[originalKey],\n          row: row,\n          index: row[indexKey],\n          viewIndex: rowIndex += 1,\n          pageSize: pageSize,\n          page: page,\n          level: path.length,\n          nestingPath: path.concat([i]),\n          aggregated: row[aggregatedKey],\n          groupedByPivot: row[groupedByPivotKey],\n          subRows: row[subRowsKey]\n        };\n\n        var isExpanded = _.get(expanded, rowInfo.nestingPath);\n\n        var trGroupProps = getTrGroupProps(finalState, rowInfo, undefined, _this2);\n\n        var trProps = _.splitProps(getTrProps(finalState, rowInfo, undefined, _this2));\n\n        return React.createElement(TrGroupComponent, _extends({\n          key: rowInfo.nestingPath.join('_')\n        }, trGroupProps), React.createElement(TrComponent, _extends({\n          className: classnames(trProps.className, row._viewIndex % 2 ? '-even' : '-odd'),\n          style: trProps.style\n        }, trProps.rest), allVisibleColumns.map(function (column, i2) {\n          var resizedCol = resized.find(function (x) {\n            return x.id === column.id;\n          }) || {};\n          var show = typeof column.show === 'function' ? column.show() : column.show;\n\n          var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n          var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n          var tdProps = _.splitProps(getTdProps(finalState, rowInfo, column, _this2));\n\n          var columnProps = _.splitProps(column.getProps(finalState, rowInfo, column, _this2));\n\n          var classes = [tdProps.className, column.className, columnProps.className];\n\n          var styles = _extends({}, tdProps.style, column.style, columnProps.style);\n\n          var cellInfo = _extends({}, rowInfo, {\n            isExpanded: isExpanded,\n            column: _extends({}, column),\n            value: rowInfo.row[column.id],\n            pivoted: column.pivoted,\n            expander: column.expander,\n            resized: resized,\n            show: show,\n            width: width,\n            maxWidth: maxWidth,\n            tdProps: tdProps,\n            columnProps: columnProps,\n            classes: classes,\n            styles: styles\n          });\n\n          var value = cellInfo.value;\n          var useOnExpanderClick = void 0;\n          var isBranch = void 0;\n          var isPreview = void 0;\n\n          var onExpanderClick = function onExpanderClick(e) {\n            var newExpanded = _.clone(expanded);\n\n            if (isExpanded) {\n              newExpanded = _.set(newExpanded, cellInfo.nestingPath, false);\n            } else {\n              newExpanded = _.set(newExpanded, cellInfo.nestingPath, {});\n            }\n\n            return _this2.setStateWithData({\n              expanded: newExpanded\n            }, function () {\n              return onExpandedChange && onExpandedChange(newExpanded, cellInfo.nestingPath, e, cellInfo);\n            });\n          }; // Default to a standard cell\n\n\n          var resolvedCell = _.normalizeComponent(column.Cell, cellInfo, value); // Resolve Renderers\n\n\n          var ResolvedAggregatedComponent = column.Aggregated || (!column.aggregate ? AggregatedComponent : column.Cell);\n          var ResolvedExpanderComponent = column.Expander || ExpanderComponent;\n          var ResolvedPivotValueComponent = column.PivotValue || PivotValueComponent;\n\n          var DefaultResolvedPivotComponent = PivotComponent || function (props) {\n            return React.createElement('div', null, React.createElement(ResolvedExpanderComponent, props), React.createElement(ResolvedPivotValueComponent, props));\n          };\n\n          var ResolvedPivotComponent = column.Pivot || DefaultResolvedPivotComponent; // Is this cell expandable?\n\n          if (cellInfo.pivoted || cellInfo.expander) {\n            // Make it expandable by defualt\n            cellInfo.expandable = true;\n            useOnExpanderClick = true; // If pivoted, has no subRows, and does not have a subComponent,\n            // do not make expandable\n\n            if (cellInfo.pivoted && !cellInfo.subRows && !SubComponent) {\n              cellInfo.expandable = false;\n            }\n          }\n\n          if (cellInfo.pivoted) {\n            // Is this column a branch?\n            isBranch = rowInfo.row[pivotIDKey] === column.id && cellInfo.subRows; // Should this column be blank?\n\n            isPreview = pivotBy.indexOf(column.id) > pivotBy.indexOf(rowInfo.row[pivotIDKey]) && cellInfo.subRows; // Pivot Cell Render Override\n\n            if (isBranch) {\n              // isPivot\n              resolvedCell = _.normalizeComponent(ResolvedPivotComponent, _extends({}, cellInfo, {\n                value: row[pivotValKey]\n              }), row[pivotValKey]);\n            } else if (isPreview) {\n              // Show the pivot preview\n              resolvedCell = _.normalizeComponent(ResolvedAggregatedComponent, cellInfo, value);\n            } else {\n              resolvedCell = null;\n            }\n          } else if (cellInfo.aggregated) {\n            resolvedCell = _.normalizeComponent(ResolvedAggregatedComponent, cellInfo, value);\n          }\n\n          if (cellInfo.expander) {\n            resolvedCell = _.normalizeComponent(ResolvedExpanderComponent, cellInfo, row[pivotValKey]);\n\n            if (pivotBy) {\n              if (cellInfo.groupedByPivot) {\n                resolvedCell = null;\n              }\n\n              if (!cellInfo.subRows && !SubComponent) {\n                resolvedCell = null;\n              }\n            }\n          }\n\n          var resolvedOnExpanderClick = useOnExpanderClick ? onExpanderClick : function () {}; // If there are multiple onClick events, make sure they don't\n          // override eachother. This should maybe be expanded to handle all\n          // function attributes\n\n          var interactionProps = {\n            onClick: resolvedOnExpanderClick\n          };\n\n          if (tdProps.rest.onClick) {\n            interactionProps.onClick = function (e) {\n              tdProps.rest.onClick(e, function () {\n                return resolvedOnExpanderClick(e);\n              });\n            };\n          }\n\n          if (columnProps.rest.onClick) {\n            interactionProps.onClick = function (e) {\n              columnProps.rest.onClick(e, function () {\n                return resolvedOnExpanderClick(e);\n              });\n            };\n          } // Return the cell\n\n\n          return React.createElement(TdComponent // eslint-disable-next-line react/no-array-index-key\n          , _extends({\n            key: i2 + '-' + column.id,\n            className: classnames(classes, !cellInfo.expandable && !show && 'hidden', cellInfo.expandable && 'rt-expandable', (isBranch || isPreview) && 'rt-pivot'),\n            style: _extends({}, styles, {\n              flex: width + ' 0 auto',\n              width: _.asPx(width),\n              maxWidth: _.asPx(maxWidth)\n            })\n          }, tdProps.rest, columnProps.rest, interactionProps), resolvedCell);\n        })), rowInfo.subRows && isExpanded && rowInfo.subRows.map(function (d, i) {\n          return makePageRow(d, i, rowInfo.nestingPath);\n        }), SubComponent && !rowInfo.subRows && isExpanded && SubComponent(rowInfo, function () {\n          var newExpanded = _.clone(expanded);\n\n          _.set(newExpanded, rowInfo.nestingPath, false);\n        }));\n      };\n\n      var makePadColumn = function makePadColumn(column, i) {\n        var resizedCol = resized.find(function (x) {\n          return x.id === column.id;\n        }) || {};\n        var show = typeof column.show === 'function' ? column.show() : column.show;\n\n        var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n        var flex = width;\n\n        var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n        var tdProps = _.splitProps(getTdProps(finalState, undefined, column, _this2));\n\n        var columnProps = _.splitProps(column.getProps(finalState, undefined, column, _this2));\n\n        var classes = [tdProps.className, column.className, columnProps.className];\n\n        var styles = _extends({}, tdProps.style, column.style, columnProps.style);\n\n        return React.createElement(TdComponent, _extends({\n          key: i + '-' + column.id,\n          className: classnames(classes, !show && 'hidden'),\n          style: _extends({}, styles, {\n            flex: flex + ' 0 auto',\n            width: _.asPx(width),\n            maxWidth: _.asPx(maxWidth)\n          })\n        }, tdProps.rest), _.normalizeComponent(PadRowComponent));\n      };\n\n      var makePadRow = function makePadRow(row, i) {\n        var trGroupProps = getTrGroupProps(finalState, undefined, undefined, _this2);\n\n        var trProps = _.splitProps(getTrProps(finalState, undefined, undefined, _this2));\n\n        return React.createElement(TrGroupComponent, _extends({\n          key: 'pad-' + i\n        }, trGroupProps), React.createElement(TrComponent, {\n          className: classnames('-padRow', (pageRows.length + i) % 2 ? '-even' : '-odd', trProps.className),\n          style: trProps.style || {}\n        }, allVisibleColumns.map(makePadColumn)));\n      };\n\n      var makeColumnFooter = function makeColumnFooter(column, i) {\n        var resizedCol = resized.find(function (x) {\n          return x.id === column.id;\n        }) || {};\n        var show = typeof column.show === 'function' ? column.show() : column.show;\n\n        var width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n\n        var maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n\n        var tFootTdProps = _.splitProps(getTfootTdProps(finalState, undefined, column, _this2));\n\n        var columnProps = _.splitProps(column.getProps(finalState, undefined, column, _this2));\n\n        var columnFooterProps = _.splitProps(column.getFooterProps(finalState, undefined, column, _this2));\n\n        var classes = [tFootTdProps.className, column.className, columnProps.className, columnFooterProps.className];\n\n        var styles = _extends({}, tFootTdProps.style, column.style, columnProps.style, columnFooterProps.style);\n\n        return React.createElement(TdComponent, _extends({\n          key: i + '-' + column.id,\n          className: classnames(classes, !show && 'hidden'),\n          style: _extends({}, styles, {\n            flex: width + ' 0 auto',\n            width: _.asPx(width),\n            maxWidth: _.asPx(maxWidth)\n          })\n        }, columnProps.rest, tFootTdProps.rest, columnFooterProps.rest), _.normalizeComponent(column.Footer, {\n          data: sortedData,\n          column: column\n        }));\n      };\n\n      var makeColumnFooters = function makeColumnFooters() {\n        var tFootProps = _.splitProps(getTfootProps(finalState, undefined, undefined, _this2));\n\n        var tFootTrProps = _.splitProps(getTfootTrProps(finalState, undefined, undefined, _this2));\n\n        return React.createElement(TfootComponent, _extends({\n          className: tFootProps.className,\n          style: _extends({}, tFootProps.style, {\n            minWidth: rowMinWidth + 'px'\n          })\n        }, tFootProps.rest), React.createElement(TrComponent, _extends({\n          className: classnames(tFootTrProps.className),\n          style: tFootTrProps.style\n        }, tFootTrProps.rest), allVisibleColumns.map(makeColumnFooter)));\n      };\n\n      var makePagination = function makePagination(isTop) {\n        var paginationProps = _.splitProps(getPaginationProps(finalState, undefined, undefined, _this2));\n\n        return React.createElement(PaginationComponent, _extends({}, resolvedState, {\n          pages: pages,\n          canPrevious: canPrevious,\n          canNext: canNext,\n          onPageChange: _this2.onPageChange,\n          onPageSizeChange: _this2.onPageSizeChange,\n          className: paginationProps.className,\n          style: paginationProps.style,\n          isTop: isTop\n        }, paginationProps.rest));\n      };\n\n      var makeTable = function makeTable() {\n        return React.createElement('div', _extends({\n          className: classnames('ReactTable', className, rootProps.className),\n          style: _extends({}, style, rootProps.style)\n        }, rootProps.rest), showPagination && showPaginationTop ? React.createElement('div', {\n          className: 'pagination-top'\n        }, makePagination(true)) : null, React.createElement(TableComponent, _extends({\n          className: classnames(tableProps.className, currentlyResizing ? 'rt-resizing' : ''),\n          style: tableProps.style\n        }, tableProps.rest), hasHeaderGroups ? makeHeaderGroups() : null, makeHeaders(), hasFilters ? makeFilters() : null, React.createElement(TbodyComponent, _extends({\n          className: classnames(tBodyProps.className),\n          style: _extends({}, tBodyProps.style, {\n            minWidth: rowMinWidth + 'px'\n          })\n        }, tBodyProps.rest), pageRows.map(function (d, i) {\n          return makePageRow(d, i);\n        }), padRows.map(makePadRow)), hasColumnFooter ? makeColumnFooters() : null), showPagination && showPaginationBottom ? React.createElement('div', {\n          className: 'pagination-bottom'\n        }, makePagination(false)) : null, !pageRows.length && React.createElement(NoDataComponent, noDataProps, _.normalizeComponent(noDataText)), React.createElement(LoadingComponent, _extends({\n          loading: loading,\n          loadingText: loadingText\n        }, loadingProps)));\n      }; // childProps are optionally passed to a function-as-a-child\n\n\n      return children ? children(finalState, makeTable, this) : makeTable();\n    }\n  }]);\n\n  return ReactTable;\n}(Methods(Lifecycle(Component)));\n\nReactTable.propTypes = propTypes;\nReactTable.defaultProps = defaultProps;\nexport default ReactTable;","map":{"version":3,"mappings":"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","names":["React","Component","classnames","_","Lifecycle","Methods","defaultProps","propTypes","ReactTableDefaults","ReactTable","props","_classCallCheck","_this","getResolvedState","bind","getDataModel","getSortedData","fireFetchData","getPropOrState","getStateOrProp","filterData","sortData","getMinRows","onPageChange","onPageSizeChange","sortColumn","filterColumn","resizeColumnStart","resizeColumnEnd","resizeColumnMoving","resolvedState","children","className","style","getProps","getTableProps","getTheadGroupProps","getTheadGroupTrProps","getTheadGroupThProps","getTheadProps","getTheadTrProps","getTheadThProps","getTheadFilterProps","getTheadFilterTrProps","getTheadFilterThProps","getTbodyProps","getTrGroupProps","getTrProps","getTdProps","getTfootProps","getTfootTrProps","getTfootTdProps","getPaginationProps","getLoadingProps","getNoDataProps","getResizerProps","showPagination","showPaginationTop","showPaginationBottom","manual","loadingText","noDataText","sortable","multiSort","resizable","filterable","pivotIDKey","pivotValKey","pivotBy","subRowsKey","aggregatedKey","originalKey","indexKey","groupedByPivotKey","loading","pageSize","page","sorted","filtered","resized","expanded","pages","onExpandedChange","TableComponent","TheadComponent","TbodyComponent","TrGroupComponent","TrComponent","ThComponent","TdComponent","TfootComponent","PaginationComponent","LoadingComponent","SubComponent","NoDataComponent","ResizerComponent","ExpanderComponent","PivotValueComponent","PivotComponent","AggregatedComponent","FilterComponent","PadRowComponent","resolvedData","allVisibleColumns","headerGroups","hasHeaderGroups","sortedData","currentlyResizing","startRow","endRow","pageRows","slice","minRows","padRows","range","Math","max","length","hasColumnFooter","some","d","Footer","hasFilters","recurseRowsViewIndex","rows","path","index","map","row","i","rowWithViewIndex","_viewIndex","newPath","concat","get","_recurseRowsViewIndex2","canPrevious","canNext","rowMinWidth","sum","resizedColumn","find","x","id","getFirstDefined","value","width","minWidth","rowIndex","finalState","rootProps","splitProps","undefined","tableProps","tBodyProps","loadingProps","noDataProps","makeHeaderGroup","column","resizedValue","col","flex","columns","maxWidth","theadGroupThProps","columnHeaderProps","getHeaderProps","classes","headerClassName","styles","headerStyle","rest","flexStyles","asPx","key","normalizeComponent","Header","data","makeHeaderGroups","theadGroupProps","theadGroupTrProps","makeHeader","resizedCol","sort","show","theadThProps","isResizable","resizer","onMouseDown","_this2","e","onTouchStart","isSortable","desc","includes","toggleSort","shiftKey","makeHeaders","theadProps","theadTrProps","makeFilter","theadFilterThProps","filter","ResolvedFilterComponent","Filter","isFilterable","onChange","makeFilters","theadFilterProps","theadFilterTrProps","makePageRow","rowInfo","original","viewIndex","level","nestingPath","aggregated","groupedByPivot","subRows","isExpanded","trGroupProps","trProps","join","i2","tdProps","columnProps","cellInfo","pivoted","expander","useOnExpanderClick","isBranch","isPreview","onExpanderClick","newExpanded","clone","set","setStateWithData","resolvedCell","Cell","ResolvedAggregatedComponent","Aggregated","aggregate","ResolvedExpanderComponent","Expander","ResolvedPivotValueComponent","PivotValue","DefaultResolvedPivotComponent","ResolvedPivotComponent","Pivot","expandable","indexOf","resolvedOnExpanderClick","interactionProps","onClick","makePadColumn","makePadRow","makeColumnFooter","tFootTdProps","columnFooterProps","getFooterProps","makeColumnFooters","tFootProps","tFootTrProps","makePagination","paginationProps","isTop","makeTable"],"sources":["/Users/admin/Documents/tasks/mern-app/client/node_modules/react-table/src/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport classnames from 'classnames'\n//\nimport _ from './utils'\nimport Lifecycle from './lifecycle'\nimport Methods from './methods'\nimport defaultProps from './defaultProps'\nimport propTypes from './propTypes'\n\nexport const ReactTableDefaults = defaultProps\n\nexport default class ReactTable extends Methods(Lifecycle(Component)) {\n  static propTypes = propTypes\n  static defaultProps = defaultProps\n\n  constructor (props) {\n    super(props)\n\n    this.getResolvedState = this.getResolvedState.bind(this)\n    this.getDataModel = this.getDataModel.bind(this)\n    this.getSortedData = this.getSortedData.bind(this)\n    this.fireFetchData = this.fireFetchData.bind(this)\n    this.getPropOrState = this.getPropOrState.bind(this)\n    this.getStateOrProp = this.getStateOrProp.bind(this)\n    this.filterData = this.filterData.bind(this)\n    this.sortData = this.sortData.bind(this)\n    this.getMinRows = this.getMinRows.bind(this)\n    this.onPageChange = this.onPageChange.bind(this)\n    this.onPageSizeChange = this.onPageSizeChange.bind(this)\n    this.sortColumn = this.sortColumn.bind(this)\n    this.filterColumn = this.filterColumn.bind(this)\n    this.resizeColumnStart = this.resizeColumnStart.bind(this)\n    this.resizeColumnEnd = this.resizeColumnEnd.bind(this)\n    this.resizeColumnMoving = this.resizeColumnMoving.bind(this)\n  }\n\n  render () {\n    const resolvedState = this.getResolvedState()\n    const {\n      children,\n      className,\n      style,\n      getProps,\n      getTableProps,\n      getTheadGroupProps,\n      getTheadGroupTrProps,\n      getTheadGroupThProps,\n      getTheadProps,\n      getTheadTrProps,\n      getTheadThProps,\n      getTheadFilterProps,\n      getTheadFilterTrProps,\n      getTheadFilterThProps,\n      getTbodyProps,\n      getTrGroupProps,\n      getTrProps,\n      getTdProps,\n      getTfootProps,\n      getTfootTrProps,\n      getTfootTdProps,\n      getPaginationProps,\n      getLoadingProps,\n      getNoDataProps,\n      getResizerProps,\n      showPagination,\n      showPaginationTop,\n      showPaginationBottom,\n      manual,\n      loadingText,\n      noDataText,\n      sortable,\n      multiSort,\n      resizable,\n      filterable,\n      // Pivoting State\n      pivotIDKey,\n      pivotValKey,\n      pivotBy,\n      subRowsKey,\n      aggregatedKey,\n      originalKey,\n      indexKey,\n      groupedByPivotKey,\n      // State\n      loading,\n      pageSize,\n      page,\n      sorted,\n      filtered,\n      resized,\n      expanded,\n      pages,\n      onExpandedChange,\n      // Components\n      TableComponent,\n      TheadComponent,\n      TbodyComponent,\n      TrGroupComponent,\n      TrComponent,\n      ThComponent,\n      TdComponent,\n      TfootComponent,\n      PaginationComponent,\n      LoadingComponent,\n      SubComponent,\n      NoDataComponent,\n      ResizerComponent,\n      ExpanderComponent,\n      PivotValueComponent,\n      PivotComponent,\n      AggregatedComponent,\n      FilterComponent,\n      PadRowComponent,\n      // Data model\n      resolvedData,\n      allVisibleColumns,\n      headerGroups,\n      hasHeaderGroups,\n      // Sorted Data\n      sortedData,\n      currentlyResizing,\n    } = resolvedState\n\n    // Pagination\n    const startRow = pageSize * page\n    const endRow = startRow + pageSize\n    let pageRows = manual ? resolvedData : sortedData.slice(startRow, endRow)\n    const minRows = this.getMinRows()\n    const padRows = _.range(Math.max(minRows - pageRows.length, 0))\n\n    const hasColumnFooter = allVisibleColumns.some(d => d.Footer)\n    const hasFilters = filterable || allVisibleColumns.some(d => d.filterable)\n\n    const recurseRowsViewIndex = (rows, path = [], index = -1) => [\n      rows.map((row, i) => {\n        index += 1\n        const rowWithViewIndex = {\n          ...row,\n          _viewIndex: index,\n        }\n        const newPath = path.concat([i])\n        if (rowWithViewIndex[subRowsKey] && _.get(expanded, newPath)) {\n          [rowWithViewIndex[subRowsKey], index] = recurseRowsViewIndex(\n            rowWithViewIndex[subRowsKey],\n            newPath,\n            index\n          )\n        }\n        return rowWithViewIndex\n      }),\n      index,\n    ];\n    [pageRows] = recurseRowsViewIndex(pageRows)\n\n    const canPrevious = page > 0\n    const canNext = page + 1 < pages\n\n    const rowMinWidth = _.sum(\n      allVisibleColumns.map(d => {\n        const resizedColumn = resized.find(x => x.id === d.id) || {}\n        return _.getFirstDefined(resizedColumn.value, d.width, d.minWidth)\n      })\n    )\n\n    let rowIndex = -1\n\n    const finalState = {\n      ...resolvedState,\n      startRow,\n      endRow,\n      pageRows,\n      minRows,\n      padRows,\n      hasColumnFooter,\n      canPrevious,\n      canNext,\n      rowMinWidth,\n    }\n\n    const rootProps = _.splitProps(getProps(finalState, undefined, undefined, this))\n    const tableProps = _.splitProps(getTableProps(finalState, undefined, undefined, this))\n    const tBodyProps = _.splitProps(getTbodyProps(finalState, undefined, undefined, this))\n    const loadingProps = getLoadingProps(finalState, undefined, undefined, this)\n    const noDataProps = getNoDataProps(finalState, undefined, undefined, this)\n\n    // Visual Components\n\n    const makeHeaderGroup = (column, i) => {\n      const resizedValue = col => (resized.find(x => x.id === col.id) || {}).value\n      const flex = _.sum(\n        column.columns.map(col => (col.width || resizedValue(col) ? 0 : col.minWidth))\n      )\n      const width = _.sum(\n        column.columns.map(col => _.getFirstDefined(resizedValue(col), col.width, col.minWidth))\n      )\n      const maxWidth = _.sum(\n        column.columns.map(col => _.getFirstDefined(resizedValue(col), col.width, col.maxWidth))\n      )\n\n      const theadGroupThProps = _.splitProps(\n        getTheadGroupThProps(finalState, undefined, column, this)\n      )\n      const columnHeaderProps = _.splitProps(\n        column.getHeaderProps(finalState, undefined, column, this)\n      )\n\n      const classes = [\n        column.headerClassName,\n        theadGroupThProps.className,\n        columnHeaderProps.className,\n      ]\n\n      const styles = {\n        ...column.headerStyle,\n        ...theadGroupThProps.style,\n        ...columnHeaderProps.style,\n      }\n\n      const rest = {\n        ...theadGroupThProps.rest,\n        ...columnHeaderProps.rest,\n      }\n\n      const flexStyles = {\n        flex: `${flex} 0 auto`,\n        width: _.asPx(width),\n        maxWidth: _.asPx(maxWidth),\n      }\n\n      return (\n        <ThComponent\n          key={`${i}-${column.id}`}\n          className={classnames(classes)}\n          style={{\n            ...styles,\n            ...flexStyles,\n          }}\n          {...rest}\n        >\n          {_.normalizeComponent(column.Header, {\n            data: sortedData,\n            column,\n          })}\n        </ThComponent>\n      )\n    }\n\n    const makeHeaderGroups = () => {\n      const theadGroupProps = _.splitProps(\n        getTheadGroupProps(finalState, undefined, undefined, this)\n      )\n      const theadGroupTrProps = _.splitProps(\n        getTheadGroupTrProps(finalState, undefined, undefined, this)\n      )\n      return (\n        <TheadComponent\n          className={classnames('-headerGroups', theadGroupProps.className)}\n          style={{\n            ...theadGroupProps.style,\n            minWidth: `${rowMinWidth}px`,\n          }}\n          {...theadGroupProps.rest}\n        >\n          <TrComponent\n            className={theadGroupTrProps.className}\n            style={theadGroupTrProps.style}\n            {...theadGroupTrProps.rest}\n          >\n            {headerGroups.map(makeHeaderGroup)}\n          </TrComponent>\n        </TheadComponent>\n      )\n    }\n\n    const makeHeader = (column, i) => {\n      const resizedCol = resized.find(x => x.id === column.id) || {}\n      const sort = sorted.find(d => d.id === column.id)\n      const show = typeof column.show === 'function' ? column.show() : column.show\n      const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth)\n      const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth)\n      const theadThProps = _.splitProps(getTheadThProps(finalState, undefined, column, this))\n      const columnHeaderProps = _.splitProps(\n        column.getHeaderProps(finalState, undefined, column, this)\n      )\n\n      const classes = [column.headerClassName, theadThProps.className, columnHeaderProps.className]\n\n      const styles = {\n        ...column.headerStyle,\n        ...theadThProps.style,\n        ...columnHeaderProps.style,\n      }\n\n      const rest = {\n        ...theadThProps.rest,\n        ...columnHeaderProps.rest,\n      }\n\n      const isResizable = _.getFirstDefined(column.resizable, resizable, false)\n      const resizer = isResizable ? (\n        <ResizerComponent\n          onMouseDown={e => this.resizeColumnStart(e, column, false)}\n          onTouchStart={e => this.resizeColumnStart(e, column, true)}\n          {...getResizerProps('finalState', undefined, column, this)}\n        />\n      ) : null\n\n      const isSortable = _.getFirstDefined(column.sortable, sortable, false)\n\n      return (\n        <ThComponent\n          key={`${i}-${column.id}`}\n          className={classnames(\n            classes,\n            isResizable && 'rt-resizable-header',\n            sort ? (sort.desc ? '-sort-desc' : '-sort-asc') : '',\n            isSortable && '-cursor-pointer',\n            !show && '-hidden',\n            pivotBy && pivotBy.slice(0, -1).includes(column.id) && 'rt-header-pivot'\n          )}\n          style={{\n            ...styles,\n            flex: `${width} 0 auto`,\n            width: _.asPx(width),\n            maxWidth: _.asPx(maxWidth),\n          }}\n          toggleSort={e => {\n            if (isSortable) this.sortColumn(column, multiSort ? e.shiftKey : false)\n          }}\n          {...rest}\n        >\n          <div className={classnames(isResizable && 'rt-resizable-header-content')}>\n            {_.normalizeComponent(column.Header, {\n              data: sortedData,\n              column,\n            })}\n          </div>\n          {resizer}\n        </ThComponent>\n      )\n    }\n\n    const makeHeaders = () => {\n      const theadProps = _.splitProps(getTheadProps(finalState, undefined, undefined, this))\n      const theadTrProps = _.splitProps(getTheadTrProps(finalState, undefined, undefined, this))\n      return (\n        <TheadComponent\n          className={classnames('-header', theadProps.className)}\n          style={{\n            ...theadProps.style,\n            minWidth: `${rowMinWidth}px`,\n          }}\n          {...theadProps.rest}\n        >\n          <TrComponent\n            className={theadTrProps.className}\n            style={theadTrProps.style}\n            {...theadTrProps.rest}\n          >\n            {allVisibleColumns.map(makeHeader)}\n          </TrComponent>\n        </TheadComponent>\n      )\n    }\n\n    const makeFilter = (column, i) => {\n      const resizedCol = resized.find(x => x.id === column.id) || {}\n      const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth)\n      const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth)\n      const theadFilterThProps = _.splitProps(\n        getTheadFilterThProps(finalState, undefined, column, this)\n      )\n      const columnHeaderProps = _.splitProps(\n        column.getHeaderProps(finalState, undefined, column, this)\n      )\n\n      const classes = [\n        column.headerClassName,\n        theadFilterThProps.className,\n        columnHeaderProps.className,\n      ]\n\n      const styles = {\n        ...column.headerStyle,\n        ...theadFilterThProps.style,\n        ...columnHeaderProps.style,\n      }\n\n      const rest = {\n        ...theadFilterThProps.rest,\n        ...columnHeaderProps.rest,\n      }\n\n      const filter = filtered.find(filter => filter.id === column.id)\n\n      const ResolvedFilterComponent = column.Filter || FilterComponent\n\n      const isFilterable = _.getFirstDefined(column.filterable, filterable, false)\n\n      return (\n        <ThComponent\n          key={`${i}-${column.id}`}\n          className={classnames(classes)}\n          style={{\n            ...styles,\n            flex: `${width} 0 auto`,\n            width: _.asPx(width),\n            maxWidth: _.asPx(maxWidth),\n          }}\n          {...rest}\n        >\n          {isFilterable\n            ? _.normalizeComponent(\n                ResolvedFilterComponent,\n                {\n                  column,\n                  filter,\n                  onChange: value => this.filterColumn(column, value),\n                },\n                defaultProps.column.Filter\n              )\n            : null}\n        </ThComponent>\n      )\n    }\n\n    const makeFilters = () => {\n      const theadFilterProps = _.splitProps(\n        getTheadFilterProps(finalState, undefined, undefined, this)\n      )\n      const theadFilterTrProps = _.splitProps(\n        getTheadFilterTrProps(finalState, undefined, undefined, this)\n      )\n      return (\n        <TheadComponent\n          className={classnames('-filters', theadFilterProps.className)}\n          style={{\n            ...theadFilterProps.style,\n            minWidth: `${rowMinWidth}px`,\n          }}\n          {...theadFilterProps.rest}\n        >\n          <TrComponent\n            className={theadFilterTrProps.className}\n            style={theadFilterTrProps.style}\n            {...theadFilterTrProps.rest}\n          >\n            {allVisibleColumns.map(makeFilter)}\n          </TrComponent>\n        </TheadComponent>\n      )\n    }\n\n    const makePageRow = (row, i, path = []) => {\n      const rowInfo = {\n        original: row[originalKey],\n        row,\n        index: row[indexKey],\n        viewIndex: (rowIndex += 1),\n        pageSize,\n        page,\n        level: path.length,\n        nestingPath: path.concat([i]),\n        aggregated: row[aggregatedKey],\n        groupedByPivot: row[groupedByPivotKey],\n        subRows: row[subRowsKey],\n      }\n      const isExpanded = _.get(expanded, rowInfo.nestingPath)\n      const trGroupProps = getTrGroupProps(finalState, rowInfo, undefined, this)\n      const trProps = _.splitProps(getTrProps(finalState, rowInfo, undefined, this))\n      return (\n        <TrGroupComponent key={rowInfo.nestingPath.join('_')} {...trGroupProps}>\n          <TrComponent\n            className={classnames(trProps.className, row._viewIndex % 2 ? '-even' : '-odd')}\n            style={trProps.style}\n            {...trProps.rest}\n          >\n            {allVisibleColumns.map((column, i2) => {\n              const resizedCol = resized.find(x => x.id === column.id) || {}\n              const show = typeof column.show === 'function' ? column.show() : column.show\n              const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth)\n              const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth)\n              const tdProps = _.splitProps(getTdProps(finalState, rowInfo, column, this))\n              const columnProps = _.splitProps(column.getProps(finalState, rowInfo, column, this))\n\n              const classes = [tdProps.className, column.className, columnProps.className]\n\n              const styles = {\n                ...tdProps.style,\n                ...column.style,\n                ...columnProps.style,\n              }\n\n              const cellInfo = {\n                ...rowInfo,\n                isExpanded,\n                column: { ...column },\n                value: rowInfo.row[column.id],\n                pivoted: column.pivoted,\n                expander: column.expander,\n                resized,\n                show,\n                width,\n                maxWidth,\n                tdProps,\n                columnProps,\n                classes,\n                styles,\n              }\n\n              const value = cellInfo.value\n\n              let useOnExpanderClick\n              let isBranch\n              let isPreview\n\n              const onExpanderClick = e => {\n                let newExpanded = _.clone(expanded)\n                if (isExpanded) {\n                  newExpanded = _.set(newExpanded, cellInfo.nestingPath, false)\n                } else {\n                  newExpanded = _.set(newExpanded, cellInfo.nestingPath, {})\n                }\n\n                return this.setStateWithData(\n                  {\n                    expanded: newExpanded,\n                  },\n                  () =>\n                    onExpandedChange &&\n                    onExpandedChange(newExpanded, cellInfo.nestingPath, e, cellInfo)\n                )\n              }\n\n              // Default to a standard cell\n              let resolvedCell = _.normalizeComponent(column.Cell, cellInfo, value)\n\n              // Resolve Renderers\n              const ResolvedAggregatedComponent =\n                column.Aggregated || (!column.aggregate ? AggregatedComponent : column.Cell)\n              const ResolvedExpanderComponent = column.Expander || ExpanderComponent\n              const ResolvedPivotValueComponent = column.PivotValue || PivotValueComponent\n              const DefaultResolvedPivotComponent =\n                PivotComponent ||\n                (props => (\n                  <div>\n                    <ResolvedExpanderComponent {...props} />\n                    <ResolvedPivotValueComponent {...props} />\n                  </div>\n                ))\n              const ResolvedPivotComponent = column.Pivot || DefaultResolvedPivotComponent\n\n              // Is this cell expandable?\n              if (cellInfo.pivoted || cellInfo.expander) {\n                // Make it expandable by defualt\n                cellInfo.expandable = true\n                useOnExpanderClick = true\n                // If pivoted, has no subRows, and does not have a subComponent,\n                // do not make expandable\n                if (cellInfo.pivoted && !cellInfo.subRows && !SubComponent) {\n                  cellInfo.expandable = false\n                }\n              }\n\n              if (cellInfo.pivoted) {\n                // Is this column a branch?\n                isBranch = rowInfo.row[pivotIDKey] === column.id && cellInfo.subRows\n                // Should this column be blank?\n                isPreview =\n                  pivotBy.indexOf(column.id) > pivotBy.indexOf(rowInfo.row[pivotIDKey]) &&\n                  cellInfo.subRows\n                // Pivot Cell Render Override\n                if (isBranch) {\n                  // isPivot\n                  resolvedCell = _.normalizeComponent(\n                    ResolvedPivotComponent,\n                    {\n                      ...cellInfo,\n                      value: row[pivotValKey],\n                    },\n                    row[pivotValKey]\n                  )\n                } else if (isPreview) {\n                  // Show the pivot preview\n                  resolvedCell = _.normalizeComponent(ResolvedAggregatedComponent, cellInfo, value)\n                } else {\n                  resolvedCell = null\n                }\n              } else if (cellInfo.aggregated) {\n                resolvedCell = _.normalizeComponent(ResolvedAggregatedComponent, cellInfo, value)\n              }\n\n              if (cellInfo.expander) {\n                resolvedCell = _.normalizeComponent(\n                  ResolvedExpanderComponent,\n                  cellInfo,\n                  row[pivotValKey]\n                )\n                if (pivotBy) {\n                  if (cellInfo.groupedByPivot) {\n                    resolvedCell = null\n                  }\n                  if (!cellInfo.subRows && !SubComponent) {\n                    resolvedCell = null\n                  }\n                }\n              }\n\n              const resolvedOnExpanderClick = useOnExpanderClick ? onExpanderClick : () => {}\n\n              // If there are multiple onClick events, make sure they don't\n              // override eachother. This should maybe be expanded to handle all\n              // function attributes\n              const interactionProps = {\n                onClick: resolvedOnExpanderClick,\n              }\n\n              if (tdProps.rest.onClick) {\n                interactionProps.onClick = e => {\n                  tdProps.rest.onClick(e, () => resolvedOnExpanderClick(e))\n                }\n              }\n\n              if (columnProps.rest.onClick) {\n                interactionProps.onClick = e => {\n                  columnProps.rest.onClick(e, () => resolvedOnExpanderClick(e))\n                }\n              }\n\n              // Return the cell\n              return (\n                <TdComponent\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={`${i2}-${column.id}`}\n                  className={classnames(\n                    classes,\n                    !cellInfo.expandable && !show && 'hidden',\n                    cellInfo.expandable && 'rt-expandable',\n                    (isBranch || isPreview) && 'rt-pivot'\n                  )}\n                  style={{\n                    ...styles,\n                    flex: `${width} 0 auto`,\n                    width: _.asPx(width),\n                    maxWidth: _.asPx(maxWidth),\n                  }}\n                  {...tdProps.rest}\n                  {...columnProps.rest}\n                  {...interactionProps}\n                >\n                  {resolvedCell}\n                </TdComponent>\n              )\n            })}\n          </TrComponent>\n          {rowInfo.subRows &&\n            isExpanded &&\n            rowInfo.subRows.map((d, i) => makePageRow(d, i, rowInfo.nestingPath))}\n          {SubComponent &&\n            !rowInfo.subRows &&\n            isExpanded &&\n            SubComponent(rowInfo, () => {\n              const newExpanded = _.clone(expanded)\n\n              _.set(newExpanded, rowInfo.nestingPath, false)\n            })}\n        </TrGroupComponent>\n      )\n    }\n\n    const makePadColumn = (column, i) => {\n      const resizedCol = resized.find(x => x.id === column.id) || {}\n      const show = typeof column.show === 'function' ? column.show() : column.show\n      const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth)\n      const flex = width\n      const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth)\n      const tdProps = _.splitProps(getTdProps(finalState, undefined, column, this))\n      const columnProps = _.splitProps(column.getProps(finalState, undefined, column, this))\n\n      const classes = [tdProps.className, column.className, columnProps.className]\n\n      const styles = {\n        ...tdProps.style,\n        ...column.style,\n        ...columnProps.style,\n      }\n\n      return (\n        <TdComponent\n          key={`${i}-${column.id}`}\n          className={classnames(classes, !show && 'hidden')}\n          style={{\n            ...styles,\n            flex: `${flex} 0 auto`,\n            width: _.asPx(width),\n            maxWidth: _.asPx(maxWidth),\n          }}\n          {...tdProps.rest}\n        >\n          {_.normalizeComponent(PadRowComponent)}\n        </TdComponent>\n      )\n    }\n\n    const makePadRow = (row, i) => {\n      const trGroupProps = getTrGroupProps(finalState, undefined, undefined, this)\n      const trProps = _.splitProps(getTrProps(finalState, undefined, undefined, this))\n      return (\n        <TrGroupComponent key={`pad-${i}`} {...trGroupProps}>\n          <TrComponent\n            className={classnames(\n              '-padRow',\n              (pageRows.length + i) % 2 ? '-even' : '-odd',\n              trProps.className\n            )}\n            style={trProps.style || {}}\n          >\n            {allVisibleColumns.map(makePadColumn)}\n          </TrComponent>\n        </TrGroupComponent>\n      )\n    }\n\n    const makeColumnFooter = (column, i) => {\n      const resizedCol = resized.find(x => x.id === column.id) || {}\n      const show = typeof column.show === 'function' ? column.show() : column.show\n      const width = _.getFirstDefined(resizedCol.value, column.width, column.minWidth)\n      const maxWidth = _.getFirstDefined(resizedCol.value, column.width, column.maxWidth)\n      const tFootTdProps = _.splitProps(getTfootTdProps(finalState, undefined, column, this))\n      const columnProps = _.splitProps(column.getProps(finalState, undefined, column, this))\n      const columnFooterProps = _.splitProps(\n        column.getFooterProps(finalState, undefined, column, this)\n      )\n\n      const classes = [\n        tFootTdProps.className,\n        column.className,\n        columnProps.className,\n        columnFooterProps.className,\n      ]\n\n      const styles = {\n        ...tFootTdProps.style,\n        ...column.style,\n        ...columnProps.style,\n        ...columnFooterProps.style,\n      }\n\n      return (\n        <TdComponent\n          key={`${i}-${column.id}`}\n          className={classnames(classes, !show && 'hidden')}\n          style={{\n            ...styles,\n            flex: `${width} 0 auto`,\n            width: _.asPx(width),\n            maxWidth: _.asPx(maxWidth),\n          }}\n          {...columnProps.rest}\n          {...tFootTdProps.rest}\n          {...columnFooterProps.rest}\n        >\n          {_.normalizeComponent(column.Footer, {\n            data: sortedData,\n            column,\n          })}\n        </TdComponent>\n      )\n    }\n\n    const makeColumnFooters = () => {\n      const tFootProps = _.splitProps(getTfootProps(finalState, undefined, undefined, this))\n      const tFootTrProps = _.splitProps(getTfootTrProps(finalState, undefined, undefined, this))\n      return (\n        <TfootComponent\n          className={tFootProps.className}\n          style={{\n            ...tFootProps.style,\n            minWidth: `${rowMinWidth}px`,\n          }}\n          {...tFootProps.rest}\n        >\n          <TrComponent\n            className={classnames(tFootTrProps.className)}\n            style={tFootTrProps.style}\n            {...tFootTrProps.rest}\n          >\n            {allVisibleColumns.map(makeColumnFooter)}\n          </TrComponent>\n        </TfootComponent>\n      )\n    }\n\n    const makePagination = isTop => {\n      const paginationProps = _.splitProps(\n        getPaginationProps(finalState, undefined, undefined, this)\n      )\n      return (\n        <PaginationComponent\n          {...resolvedState}\n          pages={pages}\n          canPrevious={canPrevious}\n          canNext={canNext}\n          onPageChange={this.onPageChange}\n          onPageSizeChange={this.onPageSizeChange}\n          className={paginationProps.className}\n          style={paginationProps.style}\n          isTop={isTop}\n          {...paginationProps.rest}\n        />\n      )\n    }\n\n    const makeTable = () => (\n      <div\n        className={classnames('ReactTable', className, rootProps.className)}\n        style={{\n          ...style,\n          ...rootProps.style,\n        }}\n        {...rootProps.rest}\n      >\n        {showPagination && showPaginationTop ? (\n          <div className=\"pagination-top\">{makePagination(true)}</div>\n        ) : null}\n        <TableComponent\n          className={classnames(tableProps.className, currentlyResizing ? 'rt-resizing' : '')}\n          style={tableProps.style}\n          {...tableProps.rest}\n        >\n          {hasHeaderGroups ? makeHeaderGroups() : null}\n          {makeHeaders()}\n          {hasFilters ? makeFilters() : null}\n          <TbodyComponent\n            className={classnames(tBodyProps.className)}\n            style={{\n              ...tBodyProps.style,\n              minWidth: `${rowMinWidth}px`,\n            }}\n            {...tBodyProps.rest}\n          >\n            {pageRows.map((d, i) => makePageRow(d, i))}\n            {padRows.map(makePadRow)}\n          </TbodyComponent>\n          {hasColumnFooter ? makeColumnFooters() : null}\n        </TableComponent>\n        {showPagination && showPaginationBottom ? (\n          <div className=\"pagination-bottom\">{makePagination(false)}</div>\n        ) : null}\n        {!pageRows.length && (\n          <NoDataComponent {...noDataProps}>{_.normalizeComponent(noDataText)}</NoDataComponent>\n        )}\n        <LoadingComponent loading={loading} loadingText={loadingText} {...loadingProps} />\n      </div>\n    )\n\n    // childProps are optionally passed to a function-as-a-child\n    return children ? children(finalState, makeTable, this) : makeTable()\n  }\n}\n"]},"metadata":{},"sourceType":"module"}